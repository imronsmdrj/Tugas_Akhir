demo()
Japanese
demo(Japanese = .scoping(all.available = TRUE))
demo(Japanese = .Japanese(all.available = TRUE))
exit()
exit
head(cars)
scatter.smooth(x=cars$speed, y=cars$dist, main="Dist ~ Speed")
par(mfrow=c(1,2)) #mendfinisikan area grafik menjadi 2 kolom
boxplot(cars$speed, main="Speed", sub=paste("Outlier rows: ", boxplot.stats(cars$speed)$out)) #boxplot untuk speed
boxplot(cars$dist, main="Dist", sub=paste("Outlier rows: ", boxplot.stats(cars$dist)$out)) #boxplot untuk distance
runExample("01_hello")
library(shiny)
runExample("01_hello")
fungsi <- function(x1,x2){
10.4 + x1*(sin(3*pi*x1))+x2*(sin(13*pi*x2))
}
x1 <- seq(-2.0, 15.5)
x2 <- seq(3.27, 8.75)
fout <- outer(x1,x2,fungsi)
persp3D(x1,x2,fout,theta = 50, phi = 20)
filled.contour(x1,x2,fout,color.palette = jet.colors)
ProsesGA <- ga(type = "real-valued", fitness = function(x) - fungsi(x[1],x[2]), min = c (-2.0,3.27),
max = c(15.5,8.75), popSize = 50, maxiter = 100)
x1 <- seq(-2.0, 15.5)
x2 <- seq(3.27, 8.75)
fout <- outer(x1,x2,fungsi)
persp3d(x1,x2,fout,theta = 50, phi = 20)
filled.contour(x1,x2,fout,color.palette = jet.colors)
ProsesGA <- ga(type = "real-valued", fitness = function(x) - fungsi(x[1],x[2]), min = c (-2.0,3.27),
max = c(15.5,8.75), popSize = 50, maxiter = 100)
summary(ProsesGA)
library("rgenoud")
install.packages("rgenoud")
f <- function(x)abs(x)+cos(x)
curve(f,-20,20)
fitness <- function(x)-f(x)
GA <- ga(type="real-valued",fitness=fitness, min=-20, max=20)
summary(GA)
plot(GA)
curve(f,-20,20)
abline(v=GA@solution, lty=3)
# Two-Dimension Function
Rastrigin <- function(x1,x2){
20+x1^2+x2^2-10*(cos(2*pi*x1)+cos(2*pi*x2))
}
f <- function(x)abs(x)+cos(x)
curve(f,-20,20)
fitness <- function(x)-f(x)
GA <- ga(type="real-valued",fitness=fitness, min=-20, max=20)
summary(GA)
setwd("~/")
f <- function(x)abs(x)+cos(x)
curve(f,-20,20)
fitness <- function(x)-f(x)
GA <- ga(type="real-valued",fitness=fitness, min=-20, max=20)
summary(GA)
plot(GA)
curve(f,-20,20)
abline(v=GA@solution, lty=3)
head(Dataset)
pairs(Dataset[1:2])
setwd("~/")
head(Dataset)
head(Dataset)
pairs(Dataset[1:2])
results <- lm(pendapatan~jumlah_pelanggan+jumlah_produk,Dataset)
summary(results)
library(readxl)
Dataset <- read_excel("F:/Imron/Kuliah/Semester 7/Internship 1/Data Untuk Aplikasi/Datel Bandung/Dataset.xlsx")
View(Dataset)
head(Dataset)
pairs(Dataset[1:2])
results <- lm(pendapatan~jumlah_pelanggan+jumlah_produk,Dataset)
summary(results)
cor(jumlah_pelanggan, jumlah_produk="pendapatan")
cor(jumlah_pelanggan, jumlah_produk, method="pendapatan")
cor(jumlah_pelanggan, jumlah_produk,pendapatan, method="pearson")
cor(jumlah_pelanggan, jumlah_produk, pendapatan, method="pearson")
cor(jumlah_pelanggan, jumlah_produk, method="pearson")
model <- lm(pendapatan ~ jumlah_pelanggan + jumlah_produk)
model <- lm(pendapatan ~ jumlah_pelanggan + jumlah_produk, Dataset)
summary(model)
plot(model)
head(Dataset)
library(readxl)
dataset <- read_excel(NULL)
View(dataset)
library(readxl)
Dataset <- read_excel("F:/Imron/Kuliah/Semester 7/Internship 1/Data Untuk Aplikasi/Datel Bandung/Dataset.xlsx")
View(Dataset)
head(Dataset)
pairs(Dataset[1:2])
results <- lm(pendapatan~jumlah_pelanggan+jumlah_produk,Dataset)
summary(results)
model <- lm(pendapatan ~ jumlah_pelanggan + jumlah_produk, Dataset)
summary(model)
plot(model)
install.packages("foreach")
install.packages("GA")
install.packages("GA")
install.packages("foreach")
install.packages("iterators")
f <- function(x) abs(x)+cos(x
min <-- 20
f <- function(x) abs(x)+cos(x)
min <-- 20
max <- 20
curve(f,min,max)
fitness<- function(x) -f(x)
GA<-ga(type="real-valued", fitness= fitness, min=min, max=max)
plot(GA)
fitness<- function(x) -f(x)
GA<-ga(type="real-valued",fitness= fitness,min=min,max=max)
plot(GA)
fitness<- function(x) -f(x)
GA<-GA(type="real-valued",fitness= fitness,min=min,max=max)
plot(GA)
summary(GA)
GA<-ga(type="real-valued",fitness= fitness,min=min,max=max)
fitness<- function(x) -f(x)
GAK<-ga(type="real-valued",fitness= fitness,min=min,max=max)
plot(GAK)
summary(GA)
install.packages("ga")
install.packages("GA")
fitness<- function(x) -f(x)
GA<-ga(type="real-valued",fitness= fitness,min=min,max=max)
plot(GA)
fitness<- function(x) -f(x)
GA<-GA(type="real-valued",fitness= fitness,min=min,max=max)
plot(GA)
library(readxl)
Dataset <- read_excel("F:/Imron/Kuliah/Semester 8/Tugas Akhir/Dokumentasi Perhitungan/Dataset.xlsx")
View(Dataset)
head(Dataset)
pairs(Dataset[1:2])
install.packages("foreach")
library(readxl)
Dataset <- read_excel("F:/Imron/Kuliah/Semester 8/Tugas Akhir/Dokumentasi Perhitungan/Dataset.xlsx")
View(Dataset)
head(Dataset)
pairs(Dataset[1:2])
results <- lm(pendapatan~jumlah_pelanggan+jumlah_produk,Dataset)
summary(results)
model <- lm(pendapatan ~ jumlah_pelanggan + jumlah_produk, Dataset)
summary(model)
plot(model)
exit
head(Dataset)
pairs(Dataset[1:2])
results <- lm(pendapatan~jumlah_pelanggan+jumlah_produk,Dataset)
summary(results)
model <- lm(pendapatan ~ jumlah_pelanggan + jumlah_produk, Dataset)
summary(model)
plot(model)
ui <- fluidPage(
titlePanel("This is a demo app"),
sidebarLayout(
sidebarPanel(
textInput("txtInput", "Input the text to Display"),
selectInput("slctInput", "Select the country you live in", choices = c("Indonesia, Singaopore, Malaysia, Japan"))
),
mainPanel(
paste("You Are Entiring"),
textOutput("txtOutput"),
textOutput("countryOuput")
)
)
)
shinyapp(ui=ui, server=server)
library(shiny); runApp('F:/Imron/Kuliah/R/select.R')
shiny::runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
shiny::runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
View(Dataset)
View(Dataset)
View(Dataset)
library(readxl)
Dataset <- read_excel("F:/Imron/Kuliah/Semester 8/Tugas Akhir/Dokumentasi Perhitungan/Dataset.xlsx")
View(Dataset)
install.packages(c("backports", "BH", "caTools", "cli", "digest", "e1071", "ellipsis", "fansi", "ggplot2", "glue", "htmltools", "httpuv", "jsonlite", "later", "maptools", "mime", "pillar", "plyr", "promises", "R6", "raster", "Rcpp", "RcppArmadillo", "reshape2", "rgdal", "rlang", "scales", "shiny", "sp", "stringi", "tibble", "vctrs", "withr"))
shiny::runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
shiny::runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
install.packages(c("backports", "jsonlite", "shiny"))
shiny::runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
shiny::runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
library(readxl)
Dataset <- read_excel("F:/Imron/Kuliah/Semester 8/Tugas Akhir/Dokumentasi Perhitungan/Dataset.xlsx")
View(Dataset)
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
runApp('F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi')
Rastrigin <- function(x1, x2)
{
y = x1*b1 + x2*b2
}
x1 <- x2 <- seq(-5.12, 5.12, by = 0.1)
f <- outer(x1, x2, Rastrigin)
?lm
?plotly
??plotly
setwd("F:/Imron/Kuliah/Semester 8/Tugas Akhir/Aplikasi")
